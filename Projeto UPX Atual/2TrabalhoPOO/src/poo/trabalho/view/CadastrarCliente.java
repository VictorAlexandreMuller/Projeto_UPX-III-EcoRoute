package poo.trabalho.view;

import java.awt.Color;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import poo.trabalho.controller.ControleCliente;
import poo.trabalho.model.Cliente;

public class CadastrarCliente extends javax.swing.JFrame {

    private ArrayList<Cliente> listaCliente = new ArrayList<>();
    
    private static ControleCliente c = new ControleCliente();
    private int idClienteNovo = -1;

    public CadastrarCliente() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoSexo = new javax.swing.ButtonGroup();
        painelCampos = new javax.swing.JPanel();
        tituloCadastrarCliente = new javax.swing.JLabel();
        codCliente = new javax.swing.JLabel();
        nomeCliente = new javax.swing.JLabel();
        enderecoCliente = new javax.swing.JLabel();
        bairroCliente = new javax.swing.JLabel();
        cidadeCliente = new javax.swing.JLabel();
        cep = new javax.swing.JLabel();
        celularCliente = new javax.swing.JLabel();
        telefoneCliente = new javax.swing.JLabel();
        emailCliente = new javax.swing.JLabel();
        campoNomeCliente = new javax.swing.JTextField();
        campoEnderecoCliente = new javax.swing.JTextField();
        campoBairroCliente = new javax.swing.JTextField();
        campoCidadeCliente = new javax.swing.JTextField();
        campoEmail = new javax.swing.JTextField();
        dataNascimentoCliente = new javax.swing.JLabel();
        dataCadastroCliente = new javax.swing.JLabel();
        cod = new javax.swing.JLabel();
        campoCelular = new javax.swing.JFormattedTextField();
        campoTelefone = new javax.swing.JFormattedTextField();
        campoCEP = new javax.swing.JFormattedTextField();
        emailInvalido = new javax.swing.JLabel();
        painelBotoes = new javax.swing.JPanel();
        botaoCancelar = new javax.swing.JButton();
        botaoCadastrar = new javax.swing.JToggleButton();
        campoDataNascimento = new javax.swing.JTextField();
        campoDataCadastro = new javax.swing.JTextField();
        campoVazio = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de Clientes");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        painelCampos.setRequestFocusEnabled(false);

        tituloCadastrarCliente.setFont(new java.awt.Font("ONE PIECE", 0, 30)); // NOI18N
        tituloCadastrarCliente.setText("Cadastrar Cliente");

        codCliente.setText("Codigo do Cliente");

        nomeCliente.setText("Nome completo ou Razão Social");

        enderecoCliente.setText("Endereço");

        bairroCliente.setText("Bairro");

        cidadeCliente.setText("Cidade");

        cep.setText("CEP");

        celularCliente.setText("Celular");

        telefoneCliente.setText("Telefone");

        emailCliente.setText("E-mail");

        campoNomeCliente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNomeClienteActionPerformed(evt);
            }
        });
        campoNomeCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campoNomeClienteKeyPressed(evt);
            }
        });

        campoEnderecoCliente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoEnderecoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoEnderecoClienteActionPerformed(evt);
            }
        });

        dataNascimentoCliente.setText("Data de Nascimento");

        dataCadastroCliente.setText("Data Cadastro");

        cod.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cod.setText("0");

        try {
            campoCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("## ##### ####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            campoTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("## #### ####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            campoCEP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##### ###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        emailInvalido.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        emailInvalido.setForeground(new java.awt.Color(255, 0, 0));

        botaoCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        botaoCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poo/trabalho/img/iconVoltar.png"))); // NOI18N
        botaoCancelar.setText(" Voltar");
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });

        botaoCadastrar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        botaoCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poo/trabalho/img/iconAdicionar.png"))); // NOI18N
        botaoCadastrar.setText(" Cadastrar");
        botaoCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelBotoesLayout = new javax.swing.GroupLayout(painelBotoes);
        painelBotoes.setLayout(painelBotoesLayout);
        painelBotoesLayout.setHorizontalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotoesLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(botaoCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(botaoCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
        );
        painelBotoesLayout.setVerticalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(botaoCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout painelCamposLayout = new javax.swing.GroupLayout(painelCampos);
        painelCampos.setLayout(painelCamposLayout);
        painelCamposLayout.setHorizontalGroup(
            painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCamposLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(painelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(painelCamposLayout.createSequentialGroup()
                .addGroup(painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCamposLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoEnderecoCliente)
                            .addComponent(campoNomeCliente)
                            .addComponent(enderecoCliente)
                            .addComponent(nomeCliente)
                            .addGroup(painelCamposLayout.createSequentialGroup()
                                .addComponent(codCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cod, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(celularCliente)
                            .addGroup(painelCamposLayout.createSequentialGroup()
                                .addGroup(painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(campoCelular, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                    .addComponent(campoBairroCliente)
                                    .addComponent(bairroCliente, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cep, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoCEP, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGroup(painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(painelCamposLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(campoCidadeCliente)
                                            .addGroup(painelCamposLayout.createSequentialGroup()
                                                .addGroup(painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(cidadeCliente)
                                                    .addGroup(painelCamposLayout.createSequentialGroup()
                                                        .addComponent(telefoneCliente)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(campoTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(painelCamposLayout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(dataNascimentoCliente)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(campoDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(painelCamposLayout.createSequentialGroup()
                                .addComponent(emailCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(emailInvalido, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelCamposLayout.createSequentialGroup()
                                .addComponent(campoEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(dataCadastroCliente)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelCamposLayout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addComponent(tituloCadastrarCliente)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        painelCamposLayout.setVerticalGroup(
            painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCamposLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(tituloCadastrarCliente)
                .addGap(14, 14, 14)
                .addGroup(painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(painelCamposLayout.createSequentialGroup()
                        .addGroup(painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(codCliente)
                            .addComponent(cod, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addComponent(nomeCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCamposLayout.createSequentialGroup()
                                .addComponent(enderecoCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoEnderecoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bairroCliente)
                                    .addComponent(cidadeCliente))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(campoBairroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoCidadeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cep)
                                .addGap(26, 26, 26))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(telefoneCliente)
                                .addComponent(campoTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(painelCamposLayout.createSequentialGroup()
                        .addGap(0, 200, Short.MAX_VALUE)
                        .addComponent(campoCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(celularCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataNascimentoCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(emailCliente)
                    .addComponent(emailInvalido, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataCadastroCliente))
                .addGap(32, 32, 32)
                .addComponent(painelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        campoVazio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoVazio.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelCampos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(campoVazio, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(197, 197, 197))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelCampos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(campoVazio, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(708, 611));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void campoNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNomeClienteActionPerformed

    }//GEN-LAST:event_campoNomeClienteActionPerformed

    private void botaoCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastrarActionPerformed
        /*
        String nome = null, endereco = null, bairro = null, cidade = null, dataNascimento = null,
                dataCadastro = null, CEP = null, celular = null, telefone = null, email = null, sexo = null;

        int contador = 0;

        if (getCampoNomeCliente().getText().trim().equals("")) {
            getNomeCliente().setForeground(Color.red);
            getCampoVazio().setText("*Preencha todos campos para continuar*");
            getCampoNomeCliente().requestFocus();
        } else {
            getNomeCliente().setForeground(Color.BLACK);
            nome = getCampoNomeCliente().getText();
            contador++;
        }
        if (getCampoEnderecoCliente().getText().trim().equals("")) {
            getEnderecoCliente().setForeground(Color.red);
            getCampoVazio().setText("*Preencha todos campos para continuar*");
            getCampoEnderecoCliente().requestFocus();
        } else {
            getEnderecoCliente().setForeground(Color.BLACK);
            endereco = getCampoEnderecoCliente().getText();
            contador++;
        }
        if (getCampoBairroCliente().getText().trim().equals("")) {
            getBairroCliente().setForeground(Color.red);
            getCampoVazio().setText("*Preencha todos campos para continuar*");
            getCampoBairroCliente().requestFocus();
        } else {
            getBairroCliente().setForeground(Color.BLACK);
            bairro = getCampoBairroCliente().getText();
            contador++;
        }
        if (getCampoCidadeCliente().getText().trim().equals("")) {
            getCidadeCliente().setForeground(Color.red);
            getCampoVazio().setText("*Preencha todos campos para continuar*");
            getCampoCidadeCliente().requestFocus();
        } else {
            getCidadeCliente().setForeground(Color.BLACK);
            cidade = getCampoCidadeCliente().getText();
            contador++;
        }
        if (getCampoCEP().getText().trim().equals("")) {
            getCep().setForeground(Color.red);
            getCampoVazio().setText("*Preencha todos campos para continuar*");
            getCampoCEP().requestFocus();
        } else {
            getCep().setForeground(Color.BLACK);
            CEP = getCampoCEP().getText();
            contador++;
        }
        if (getCampoCelular().getText().trim().equals("")) {
            getCelularCliente().setForeground(Color.red);
            getCampoVazio().setText("*Preencha todos campos para continuar*");
            getCampoCelular().requestFocus();
        } else {
            getCelularCliente().setForeground(Color.BLACK);
            celular = getCampoCelular().getText();
            contador++;
        }
        if (getCampoTelefone().getText().trim().equals("")) {
            getTelefoneCliente().setForeground(Color.red);
            getCampoVazio().setText("*Preencha todos campos para continuar*");
            getCampoTelefone().requestFocus();
        } else {
            getTelefoneCliente().setForeground(Color.BLACK);
            telefone = getCampoTelefone().getText();
            contador++;
        }
        if (getCampoEmail().getText().trim().equals("")) {
            getEmailCliente().setForeground(Color.red);
            getCampoVazio().setText("*Preencha todos campos para continuar*");
            getCampoEnderecoCliente().requestFocus();
        } else {
            String emailTexte = getCampoEmail().getText();
            String expression = "^[\\w\\.-]+@([\\w\\-]+\\.)+[A-Z]{2,4}$";
            Pattern pattern = Pattern.compile(expression, Pattern.CASE_INSENSITIVE);
            Matcher matcher = pattern.matcher(emailTexte);
            if (matcher.matches()) {
                getEmailCliente().setForeground(Color.BLACK);
                email = getCampoEmail().getText();
                //System.out.println("\nEmail valido\n");
                getEmailInvalido().setText("");
                contador++;
            } else {
                getEmailInvalido().setText("Email invalido");
                //System.out.println("\nEmail invalido\n");
                getCampoEmail().requestFocus();
            }
        }
        if (getCampoDataNascimento().getText().trim().equals("")) {
            getDataNascimentoCliente().setForeground(Color.red);
            getCampoVazio().setText("*Preencha todos campos para continuar*");
            getCampoDataNascimento().requestFocus();
        } else {
            getDataNascimentoCliente().setForeground(Color.BLACK);
            dataNascimento = getCampoDataNascimento().getText();
            contador++;
        }
        if (getCampoDataCadastro().getText().trim().equals("")) {
            getDataCadastroCliente().setForeground(Color.red);
            getCampoVazio().setText("*Preencha todos campos para continuar*");
            getCampoEnderecoCliente().requestFocus();
        } else {
            getDataCadastroCliente().setForeground(Color.BLACK);
            dataCadastro = getCampoDataCadastro().getText();
            contador++;
        }

        //System.out.println("Contador = " + contador);
        if (contador == 11) {

            if (idClienteNovo == -1) {
                Cliente cliente = new Cliente(nome, endereco, bairro, cidade, getC().idCliente(), CEP, celular, telefone,
                        email, dataCadastro, dataNascimento);

                getC().adicionarCliente(cliente);

            } else if (idClienteNovo != -1) {
                Cliente cliente = new Cliente(nome, endereco, bairro, cidade, idClienteNovo, CEP, celular, telefone,
                        email, dataCadastro, dataNascimento);

                getC().adicionarCliente(cliente);

                System.out.println("eslse if idCliente " + idClienteNovo);
                idClienteNovo = -1;
                JOptionPane.showMessageDialog(this, " Cliente Alterado com sucesso! ");

            }

            System.out.println("\nidClienteNovo " + idClienteNovo + "\n");

            getCod().setText(Integer.toString(getC().idCliente()));

            getC().mostrarCliente();

            getNomeCliente().setForeground(Color.black);
            getEnderecoCliente().setForeground(Color.black);;
            getBairroCliente().setForeground(Color.black);
            getCidadeCliente().setForeground(Color.black);
            getCep().setForeground(Color.black);;
            getCelularCliente().setForeground(Color.black);
            getTelefoneCliente().setForeground(Color.black);
            getEmailCliente().setForeground(Color.black);
            getDataNascimentoCliente().setForeground(Color.black);
            getDataCadastroCliente().setForeground(Color.black);

            JOptionPane.showMessageDialog(this, " Cliente cadastrado com sucesso! ");
            getCampoNomeCliente().setText("");
            getCampoEnderecoCliente().setText("");
            getCampoBairroCliente().setText("");
            getCampoCidadeCliente().setText("");
            getCampoCEP().setText("");
            getCampoCelular().setText("");
            getCampoTelefone().setText("");
            getCampoEmail().setText("");
            getCampoDataNascimento().setText("");
            getCampoDataCadastro().setText("");
            getCampoVazio().setText("");
            getCampoNomeCliente().requestFocus();

        }
        
        CRUD - 
        
        CREATE
        READ
        UPDATE
        DELETE
        
        
        */
        
        Cliente cliente = new Cliente();
        cliente.setNome(campoNomeCliente.getText());
        cliente.setEndereco(campoEnderecoCliente.getText());
        cliente.setBairro(campoBairroCliente.getText());
        cliente.setCidade(campoCidadeCliente.getText());
        cliente.setCep(campoCEP.getText());
        cliente.setTelefone(campoTelefone.getText());
        cliente.setCelular(campoCelular.getText());
        
        cliente.setDataNascimento(campoDataNascimento.getText());
        cliente.setEmail(campoEmail.getText());
        cliente.setDataCadastro(campoDataCadastro.getText());
        
        
        listaCliente.add(cliente);
        JOptionPane.showMessageDialog(this, "Cliente salvo com sucesso!");
        
    }//GEN-LAST:event_botaoCadastrarActionPerformed

    private void campoEnderecoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoEnderecoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoEnderecoClienteActionPerformed

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        dispose();
        new Principal().setVisible(true);
    }//GEN-LAST:event_botaoCancelarActionPerformed

    private void campoNomeClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNomeClienteKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            getBotaoCadastrar().doClick();
        }

    }//GEN-LAST:event_campoNomeClienteKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if (idClienteNovo == -1) {
            getCod().setText(Integer.toString(getC().idCliente()));
        } else {
            getCod().setText(Integer.toString(idClienteNovo));
        }


    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastrarCliente().setVisible(true);

            }

        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bairroCliente;
    private javax.swing.JToggleButton botaoCadastrar;
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JTextField campoBairroCliente;
    private javax.swing.JFormattedTextField campoCEP;
    private javax.swing.JFormattedTextField campoCelular;
    private javax.swing.JTextField campoCidadeCliente;
    private javax.swing.JTextField campoDataCadastro;
    private javax.swing.JTextField campoDataNascimento;
    private javax.swing.JTextField campoEmail;
    private javax.swing.JTextField campoEnderecoCliente;
    private javax.swing.JTextField campoNomeCliente;
    private javax.swing.JFormattedTextField campoTelefone;
    private javax.swing.JLabel campoVazio;
    private javax.swing.JLabel celularCliente;
    private javax.swing.JLabel cep;
    private javax.swing.JLabel cidadeCliente;
    private javax.swing.JLabel cod;
    private javax.swing.JLabel codCliente;
    private javax.swing.JLabel dataCadastroCliente;
    private javax.swing.JLabel dataNascimentoCliente;
    private javax.swing.JLabel emailCliente;
    private javax.swing.JLabel emailInvalido;
    private javax.swing.JLabel enderecoCliente;
    public javax.swing.ButtonGroup grupoSexo;
    private javax.swing.JLabel nomeCliente;
    private javax.swing.JPanel painelBotoes;
    private javax.swing.JPanel painelCampos;
    private javax.swing.JLabel telefoneCliente;
    private javax.swing.JLabel tituloCadastrarCliente;
    // End of variables declaration//GEN-END:variables

    public void setIdCliente(int idCliente) {
        this.idClienteNovo = idCliente;
    }

    public void setSexoCliente(String sexo) {
        System.out.println("sexo = " + sexo);
    }

    public void setCampoNomeCliente(String campoNomeCliente) {
        getCampoNomeCliente().setText(campoNomeCliente);
    }

    public void setCampoEnderecoCliente(String campoEnderecoCliente) {
        getCampoEnderecoCliente().setText(campoEnderecoCliente);
    }

    public void setCampoBairroCliente(String campoBairroCliente) {
        getCampoBairroCliente().setText(campoBairroCliente);
    }

    public void setCampoCidadeCliente(String campoCidadeCliente) {
        getCampoCidadeCliente().setText(campoCidadeCliente);
    }

    public void setCampoCEP(String campoCEP) {
        getCampoCEP().setText(campoCEP);
    }

    public void setCampoCelular(String campoCelular) {
        getCampoCelular().setText(campoCelular);
    }

    public void setCampoTelefone(String campoTelefone) {
        getCampoTelefone().setText(campoTelefone);
    }

    public void setCampoEmail(String campoEmail) {
        getCampoEmail().setText(campoEmail);
    }

    public void setDataNascimentoCliente(String dataNascimentoCliente) {
        getCampoDataNascimento().setText(dataNascimentoCliente);
    }

    public void setDataCadastroCliente(String dataCadastroCliente) {
        getCampoDataCadastro().setText(dataCadastroCliente);
    }

    public void setNomeBotaoCadastrar() {
        botaoCadastrar.setText("Alterar");
    }

    public static ControleCliente getC() {
        return c;
    }

    public static void setC(ControleCliente aC) {
        c = aC;
    }

    public javax.swing.JLabel getBairroCliente() {
        return bairroCliente;
    }

    public void setBairroCliente(javax.swing.JLabel bairroCliente) {
        this.bairroCliente = bairroCliente;
    }

    public javax.swing.JToggleButton getBotaoCadastrar() {
        return botaoCadastrar;
    }

    public void setBotaoCadastrar(javax.swing.JToggleButton botaoCadastrar) {
        this.botaoCadastrar = botaoCadastrar;
    }

    public javax.swing.JButton getBotaoCancelar() {
        return botaoCancelar;
    }

    public void setBotaoCancelar(javax.swing.JButton botaoCancelar) {
        this.botaoCancelar = botaoCancelar;
    }

    public javax.swing.JTextField getCampoBairroCliente() {
        return campoBairroCliente;
    }

    public javax.swing.JFormattedTextField getCampoCEP() {
        return campoCEP;
    }

    public javax.swing.JFormattedTextField getCampoCelular() {
        return campoCelular;
    }

    public javax.swing.JTextField getCampoCidadeCliente() {
        return campoCidadeCliente;
    }

    public javax.swing.JTextField getCampoDataCadastro() {
        return campoDataCadastro;
    }

    public javax.swing.JTextField getCampoDataNascimento() {
        return campoDataNascimento;//campoDataNascimento
    }

    public void setCampoDataCadastro(javax.swing.JFormattedTextField campoDataCadastro) {
        this.campoDataCadastro = campoDataCadastro;
    }

    public void setCampoDataNascimento(javax.swing.JFormattedTextField campoDataNascimento) {
        this.campoDataNascimento = campoDataNascimento;
    }

    public javax.swing.JTextField getCampoEmail() {
        return campoEmail;
    }

    public javax.swing.JTextField getCampoEnderecoCliente() {
        return campoEnderecoCliente;
    }

    public javax.swing.JTextField getCampoNomeCliente() {
        return campoNomeCliente;
    }

    public javax.swing.JFormattedTextField getCampoTelefone() {
        return campoTelefone;
    }

    public javax.swing.JLabel getCampoVazio() {
        return campoVazio;
    }

    public void setCampoVazio(javax.swing.JLabel campoVazio) {
        this.campoVazio = campoVazio;
    }

    public javax.swing.JLabel getCelularCliente() {
        return celularCliente;
    }

    public void setCelularCliente(javax.swing.JLabel celularCliente) {
        this.celularCliente = celularCliente;
    }

    public javax.swing.JLabel getCep() {
        return cep;
    }

    public void setCep(javax.swing.JLabel cep) {
        this.cep = cep;
    }

    public javax.swing.JLabel getCidadeCliente() {
        return cidadeCliente;
    }

    public void setCidadeCliente(javax.swing.JLabel cidadeCliente) {
        this.cidadeCliente = cidadeCliente;
    }

    public javax.swing.JLabel getCod() {
        return cod;
    }

    public void setCod(javax.swing.JLabel cod) {
        this.cod = cod;
    }

    public javax.swing.JLabel getCodCliente() {
        return codCliente;
    }

    public void setCodCliente(javax.swing.JLabel codCliente) {
        this.codCliente = codCliente;
    }

    public javax.swing.JLabel getDataCadastroCliente() {
        return dataCadastroCliente;
    }

    public javax.swing.JLabel getDataNascimentoCliente() {
        return dataNascimentoCliente;
    }

    public javax.swing.JLabel getEmailCliente() {
        return emailCliente;
    }

    public void setEmailCliente(javax.swing.JLabel emailCliente) {
        this.emailCliente = emailCliente;
    }

    public javax.swing.JLabel getEmailInvalido() {
        return emailInvalido;
    }

    public void setEmailInvalido(javax.swing.JLabel emailInvalido) {
        this.emailInvalido = emailInvalido;
    }

    public javax.swing.JLabel getEnderecoCliente() {
        return enderecoCliente;
    }

    public void setEnderecoCliente(javax.swing.JLabel enderecoCliente) {
        this.enderecoCliente = enderecoCliente;
    }

    public javax.swing.JLabel getNomeCliente() {
        return nomeCliente;
    }

    public void setNomeCliente(javax.swing.JLabel nomeCliente) {
        this.nomeCliente = nomeCliente;
    }

    public javax.swing.JPanel getPainelBotoes() {
        return painelBotoes;
    }

    public void setPainelBotoes(javax.swing.JPanel painelBotoes) {
        this.painelBotoes = painelBotoes;
    }

    public javax.swing.JPanel getPainelCampos() {
        return painelCampos;
    }

    public void setPainelCampos(javax.swing.JPanel painelCampos) {
        this.painelCampos = painelCampos;
    }

    public javax.swing.JLabel getTelefoneCliente() {
        return telefoneCliente;
    }

    public void setTelefoneCliente(javax.swing.JLabel telefoneCliente) {
        this.telefoneCliente = telefoneCliente;
    }

}
